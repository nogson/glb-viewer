/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ui-src/assets/glb/BathChair.glb -o ui-src/components/BathChair.tsx 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Circle_1: THREE.Mesh
    Circle_2: THREE.Mesh
    Circle001: THREE.Mesh
  }
  materials: {
    Material01: THREE.MeshStandardMaterial
    ['Material02.001']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/BathChair.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Circle001.geometry} material={materials['Material02.001']} />
      <mesh geometry={nodes.Circle_1.geometry} material={materials.Material01} />
      <mesh geometry={nodes.Circle_2.geometry} material={materials.Material01} />
    </group>
  )
}

useGLTF.preload('/BathChair.glb')
