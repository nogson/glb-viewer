/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ui-src/assets/glb/Bucket.glb -o ui-src/components/Bucket.tsx 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Circle: THREE.Mesh;
    Cylinder: THREE.Mesh;
    Cylinder002: THREE.Mesh;
  };
  materials: {
    ["wood.001"]: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "https://nogson.github.io/glb-viewer/ui-src/assets/glb/Bucket.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials["wood.001"]} />
      <mesh
        geometry={nodes.Circle.geometry}
        material={materials["wood.001"]}
        position={[0, -0.503, 0]}
        scale={0.445}
      />
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials.Material}
        position={[0, -0.317, 0]}
        scale={[0.579, 0.041, 0.579]}
      />
      <mesh
        geometry={nodes.Cylinder002.geometry}
        material={materials.Material}
        position={[0, 0.216, 0]}
        scale={[0.698, 0.041, 0.698]}
      />
    </group>
  );
}

useGLTF.preload(
  "https://nogson.github.io/glb-viewer/ui-src/assets/glb/Bucket.glb"
);
