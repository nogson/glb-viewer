/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ui-src/assets/glb/Mirror.glb -o ui-src/components/Mirror.tsx 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    washStand001: THREE.Mesh;
    washStand: THREE.Mesh;
    Cube004: THREE.Mesh;
  };
  materials: {
    ["wood-box"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["floor.001"]: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "https://nogson.github.io/glb-viewer/ui-src/assets/glb//Mirror.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.washStand001.geometry}
        material={materials["wood-box"]}
        position={[-0.046, 8.003, -2.225]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.088, 2.828, 8.729]}
      />
      <mesh
        geometry={nodes.washStand.geometry}
        material={materials["Material.001"]}
        position={[-0.046, 8.003, -2.207]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.086, 2.687, 8.574]}
      >
        <mesh
          geometry={nodes.Cube004.geometry}
          material={materials["floor.001"]}
          position={[-20.855, -1.915, -0.675]}
          rotation={[0, -1.571, 0]}
          scale={[0.185, 0.59, 18.349]}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload(
  "https://nogson.github.io/glb-viewer/ui-src/assets/glb//Mirror.glb"
);
